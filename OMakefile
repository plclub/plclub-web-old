###############################################################################
# Software: what it is called, and where to find it
###############################################################################

# Need Java to rebuild some pages -- assume it is in your path
JAVA = java

# rsync command used to transfer the data to the server
RSYNC=rsync -rulzvtS -e ssh
#RSYNC=rsync -rulzvtS --delete -e ssh

# Smarter copy?  Hopefully spend less time recopying large files.
SMRTCP=rsync

###############################################################################
# Distinguished directories
###############################################################################


# Name of the destination directory, where content is staged
LIVE = dest

# Name of the source directory, where the input files live
SRC = src

# All proper subdirectories of SRC
DIRS = $(subdirs CP, $(SRC)) $(SRC)


# SPECIALDIRS are subdirectories of SRC that should be treated specially,
# rather than just copied.
SPECIALDIRS = $(SRC)/papers $(SRC)/schedule $(SRC)/ms $(SRC)/ms/html $(SRC)/ms/util $(SRC)/ms/src

$(LIVE):
	if $(file-exists $@)
	  # NOP
	else
	 -mkdir $@

.PHONY: build clean commit update live live-plclub

update:
	svn update

build: $(DIRS)

clean:
	$(RM) -r $(LIVE)

commit:
	svn commit

live:
	$(RSYNC) ./$(LIVE)/ "plclub@eniac-l.seas.upenn.edu:html/"
	ssh plclub@eniac-l.seas.upenn.edu chmod -R a+rX html

###############################################################################
# Default case - just copy the contents
###############################################################################

# Copy the files into the right place
.SUBDIRS: $(set-diff $(DIRS), $(SPECIALDIRS))
  # Get the directory name relative to the project root
  DIR = $(in $(ROOT)/$(SRC), $(CWD))
  FILES = $(set-diff $(glob * .*) $(glob .*), $(glob D,* .*))
  build:
    # If this directory doesn't exist yet, create it
    -mkdir -p $(ROOT)/$(LIVE)/$(DIR)
    if $(eq $(length $(FILES)), $(int 0))
      # NOP
    else
      # Do the copying
      $(SMRTCP) $(FILES) $(ROOT)/$(LIVE)/$(DIR)/

  clean:


###############################################################################
# Build the PLClub publications list
###############################################################################

.SUBDIRS: $(SRC)/papers
  DIR = $(in $(ROOT)/$(SRC), $(CWD))

  build:
    # Use the old makefile for the moment
    make
    -mkdir -p $(ROOT)/$(LIVE)/$(DIR)
    $(SMRTCP) $(glob *.html *.shtml) $(ROOT)/$(LIVE)/$(DIR)/

  clean:
    make clean

###############################################################################
# Build the Manifest Security Pages
###############################################################################
.SUBDIRS: $(SRC)/ms 
  DIR = $(in $(ROOT)/$(SRC), $(CWD))

  build:
    mkdir -p $(ROOT)/$(LIVE)/$(DIR)
    section 
      $(CWD)/util/format $(CWD)/src/activities.html $(ROOT)/$(LIVE)/$(DIR)/activities.html 
      $(CWD)/util/format $(CWD)/src/index.html $(ROOT)/$(LIVE)/$(DIR)/index.html
      $(CWD)/util/format $(CWD)/src/papers.html $(ROOT)/$(LIVE)/$(DIR)/papers.html
      $(CWD)/util/format $(CWD)/src/people.html $(ROOT)/$(LIVE)/$(DIR)/people.html
      $(CWD)/util/format $(CWD)/src/meetings.html $(ROOT)/$(LIVE)/$(DIR)/meetings.html
      $(SMRTCP) $(glob src/*.jpg src/*.gif src/*.css) $(ROOT)/$(LIVE)/$(DIR)/

  clean:

###############################################################################
# Build the PLClub lunch schedule
###############################################################################

.SUBDIRS: $(SRC)/schedule
  DIR = $(in $(ROOT)/$(SRC), $(CWD))

  build:
    mkdir -p $(ROOT)/$(LIVE)/$(DIR)
    section
      setenv(CLASSPATH, $(concat :, $(glob $(ROOT)/java/*.jar)))
      $(JAVA) net.sf.saxon.Transform $(CWD)/fall05.xml $(CWD)/schedule.xslt semester="Fall 2005" file=fall05.shtml > $(ROOT)/$(LIVE)/$(DIR)/fall05.shtml
      $(JAVA) net.sf.saxon.Transform $(CWD)/spring06.xml $(CWD)/schedule.xslt semester="Spring 2006" file=spring06.shtml > $(ROOT)/$(LIVE)/$(DIR)/spring06.shtml
      $(JAVA) net.sf.saxon.Transform $(CWD)/summer06.xml $(CWD)/schedule.xslt semester="Summer 2006" file=summer06.shtml > $(ROOT)/$(LIVE)/$(DIR)/summer06.shtml
      $(JAVA) net.sf.saxon.Transform $(CWD)/fall06.xml $(CWD)/schedule.xslt semester="Fall 2006" file=fall06.shtml > $(ROOT)/$(LIVE)/$(DIR)/fall06.shtml
      $(JAVA) net.sf.saxon.Transform $(CWD)/spring07.xml $(CWD)/schedule.xslt semester="Spring 2006" file=spring07.shtml > $(ROOT)/$(LIVE)/$(DIR)/spring07.shtml 
      $(JAVA) net.sf.saxon.Transform $(CWD)/summer07.xml $(CWD)/schedule.xslt semester="Summer 2007" file=summer07.shtml > $(ROOT)/$(LIVE)/$(DIR)/summer07.shtml
      $(JAVA) net.sf.saxon.Transform $(CWD)/fall07.xml $(CWD)/schedule.xslt semester="Fall 2007" file=fall07.shtml > $(ROOT)/$(LIVE)/$(DIR)/fall07.shtml
      $(JAVA) net.sf.saxon.Transform $(CWD)/spring08.xml $(CWD)/schedule.xslt semester="Spring 2008" file=fall08.shtml > $(ROOT)/$(LIVE)/$(DIR)/spring08.shtml
      $(JAVA) net.sf.saxon.Transform $(CWD)/summer08.xml $(CWD)/schedule.xslt semester="Summer 2008" file=fall08.shtml > $(ROOT)/$(LIVE)/$(DIR)/summer08.shtml

      # Copy everything else
      $(SMRTCP) $(glob *.shtml) $(ROOT)/$(LIVE)/$(DIR)/

  clean:
    $(RM) $(CWD)/fall05.shtml
    $(RM) $(CWD)/spring06.shtml
    $(RM) $(CWD)/summer06.shtml

